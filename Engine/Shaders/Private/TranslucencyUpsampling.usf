// Copyright Epic Games, Inc. All Rights Reserved.

/*=============================================================================
	TranslucencyUpsampling.usf: PostProcessing shader to upscale
=============================================================================*/

#include "Common.ush"
#include "SeparateTranslucency.ush"

Texture2D LowResColorTexture;
float2 LowResExtentInverse;

void SimpleUpsamplingPS(FScreenVertexOutput Input, out float4 OutColor : SV_Target0)
{
	OutColor = BilinearUpsampling(Input.UV, LowResColorTexture);
}

void NearestDepthNeighborUpsamplingPS(FScreenVertexOutput Input, out float4 OutColor : SV_Target0)
{
	NearestDepthNeighborUpsamplingResult UpsampleResult = NearestDepthNeighborUpsampling(Input.Position.xy, Input.UV, LowResExtentInverse);

	if (UpsampleResult.bUsePointSampler)
	{
		OutColor = Texture2DSampleLevel(LowResColorTexture, GlobalPointClampedSampler, UpsampleResult.UV, 0);
	}
	else
	{
		OutColor = Texture2DSampleLevel(LowResColorTexture, GlobalBilinearClampedSampler, UpsampleResult.UV, 0);
	}
}
